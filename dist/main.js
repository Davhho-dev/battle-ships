(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),i=t(645),A=t.n(i)()(o());A.push([n.id,'* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml,\nbody {\n    height: 100%;\n    background-color: black;\n}\n\n:root {\n    --pri-ft: "Press Start 2P";\n    --pri-clr: green;\n    --square-size: 5rem;\n}\n\n/* ---------- INITIALIZE ---------- */\n.initialize {\n    height: 100%;\n    position: relative;\n}\n\n.initialize-title {\n    height: 100%;\n    font-family: var(--pri-ft);\n    font-size: 5rem;\n    color: var(--pri-clr);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    animation-name: title-show;\n    animation-duration: 2s;\n    animation-fill-mode: forwards;\n}\n\n.start {\n    position: fixed;\n    top: 65%;\n    left: 45%;\n    font-family: var(--pri-ft);\n    font-size: 2.5rem;\n    width: 15rem;\n    line-height: 5rem;\n    text-align: center;\n    animation-name: title-show;\n    animation-duration: 2s;\n    animation-fill-mode: forwards;\n}\n\n@keyframes title-show {\n    from {color: black; opacity: 0;}\n    to {color: var(--pri-clr); opacity: 100%}\n}\n\n.slider {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    border-top: 5px solid green;\n    border-bottom: 5px solid green;\n    animation-name: slide;\n    animation-duration: 2s;\n    animation-fill-mode: forwards;\n}\n\n@keyframes slide {\n    0% {height: 0%; top: 50%;}\n    55% {height: 100%; top: 0%;}\n    100% {opacity: 0%;}\n}\n\n/* ---------- AFTER INITIALIZATION ---------- */\n.title {\n    font-family: var(--pri-ft);\n    font-size: 2rem;\n    color: var(--pri-clr);\n    margin-top: 3rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.gameboard-con {\n    margin-top: 5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10rem;\n}\n\n.player-con,\n.computer-con {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 3rem;\n}\n\n.player-title,\n.computer-title {\n    font-family: var(--pri-ft);\n    font-size: 2rem;\n    color: var(--pri-clr);\n}\n\n[class*="sq"] {\n    width: var(--square-size);\n    height: var(--square-size);\n    font-family: var(--pri-ft);\n    color: var(--pri-clr);\n    border: 1px solid var(--pri-clr);\n}\n\n#player-gameboard,\n#computer-gameboard,\n.modal-gameboard {\n    /* border: 3px solid green; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n/* ---------- MODAL ---------- */\ndialog {\n    position: fixed;\n    left: 25%;\n    top: 16.5%;\n    padding: 2rem;\n    background-color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5rem;\n}\n\ndialog::backdrop {\n    background-color: rgba(255, 255, 255, 0.25);\n}\n\n.modal-right {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5rem;\n}\n\n.ship-questionnaire {\n    font-family: var(--pri-ft);\n    font-size: 2rem;\n    color: var(--pri-clr);\n}\n\n.button-con {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\nbutton {\n    cursor: pointer;\n    line-height: 4rem;\n    width: 10rem;\n    font-family: var(--pri-ft);\n    font-size: 1.5rem;\n    color: var(--pri-clr);\n    border: 2px solid var(--pri-clr);\n    border-radius: 10px;\n    background-color: black;\n}\n\nbutton:active {\n    color: white;\n    border-color: white;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;;IAEI,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,0BAA0B;IAC1B,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA,qCAAqC;AACrC;IACI,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,0BAA0B;IAC1B,eAAe;IACf,qBAAqB;IACrB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,0BAA0B;IAC1B,sBAAsB;IACtB,6BAA6B;AACjC;;AAEA;IACI,eAAe;IACf,QAAQ;IACR,SAAS;IACT,0BAA0B;IAC1B,iBAAiB;IACjB,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,0BAA0B;IAC1B,sBAAsB;IACtB,6BAA6B;AACjC;;AAEA;IACI,MAAM,YAAY,EAAE,UAAU,CAAC;IAC/B,IAAI,qBAAqB,EAAE,aAAa;AAC5C;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,QAAQ;IACR,2BAA2B;IAC3B,8BAA8B;IAC9B,qBAAqB;IACrB,sBAAsB;IACtB,6BAA6B;AACjC;;AAEA;IACI,IAAI,UAAU,EAAE,QAAQ,CAAC;IACzB,KAAK,YAAY,EAAE,OAAO,CAAC;IAC3B,MAAM,WAAW,CAAC;AACtB;;AAEA,+CAA+C;AAC/C;IACI,0BAA0B;IAC1B,eAAe;IACf,qBAAqB;IACrB,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;AACd;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;;IAEI,0BAA0B;IAC1B,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,yBAAyB;IACzB,0BAA0B;IAC1B,0BAA0B;IAC1B,qBAAqB;IACrB,gCAAgC;AACpC;;AAEA;;;IAGI,6BAA6B;IAC7B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA,gCAAgC;AAChC;IACI,eAAe;IACf,SAAS;IACT,UAAU;IACV,aAAa;IACb,uBAAuB;IACvB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,2CAA2C;AAC/C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,0BAA0B;IAC1B,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,YAAY;IACZ,0BAA0B;IAC1B,iBAAiB;IACjB,qBAAqB;IACrB,gCAAgC;IAChC,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,mBAAmB;AACvB",sourcesContent:['* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml,\nbody {\n    height: 100%;\n    background-color: black;\n}\n\n:root {\n    --pri-ft: "Press Start 2P";\n    --pri-clr: green;\n    --square-size: 5rem;\n}\n\n/* ---------- INITIALIZE ---------- */\n.initialize {\n    height: 100%;\n    position: relative;\n}\n\n.initialize-title {\n    height: 100%;\n    font-family: var(--pri-ft);\n    font-size: 5rem;\n    color: var(--pri-clr);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    animation-name: title-show;\n    animation-duration: 2s;\n    animation-fill-mode: forwards;\n}\n\n.start {\n    position: fixed;\n    top: 65%;\n    left: 45%;\n    font-family: var(--pri-ft);\n    font-size: 2.5rem;\n    width: 15rem;\n    line-height: 5rem;\n    text-align: center;\n    animation-name: title-show;\n    animation-duration: 2s;\n    animation-fill-mode: forwards;\n}\n\n@keyframes title-show {\n    from {color: black; opacity: 0;}\n    to {color: var(--pri-clr); opacity: 100%}\n}\n\n.slider {\n    position: absolute;\n    width: 100%;\n    top: 50%;\n    border-top: 5px solid green;\n    border-bottom: 5px solid green;\n    animation-name: slide;\n    animation-duration: 2s;\n    animation-fill-mode: forwards;\n}\n\n@keyframes slide {\n    0% {height: 0%; top: 50%;}\n    55% {height: 100%; top: 0%;}\n    100% {opacity: 0%;}\n}\n\n/* ---------- AFTER INITIALIZATION ---------- */\n.title {\n    font-family: var(--pri-ft);\n    font-size: 2rem;\n    color: var(--pri-clr);\n    margin-top: 3rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.gameboard-con {\n    margin-top: 5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10rem;\n}\n\n.player-con,\n.computer-con {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 3rem;\n}\n\n.player-title,\n.computer-title {\n    font-family: var(--pri-ft);\n    font-size: 2rem;\n    color: var(--pri-clr);\n}\n\n[class*="sq"] {\n    width: var(--square-size);\n    height: var(--square-size);\n    font-family: var(--pri-ft);\n    color: var(--pri-clr);\n    border: 1px solid var(--pri-clr);\n}\n\n#player-gameboard,\n#computer-gameboard,\n.modal-gameboard {\n    /* border: 3px solid green; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n/* ---------- MODAL ---------- */\ndialog {\n    position: fixed;\n    left: 25%;\n    top: 16.5%;\n    padding: 2rem;\n    background-color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5rem;\n}\n\ndialog::backdrop {\n    background-color: rgba(255, 255, 255, 0.25);\n}\n\n.modal-right {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5rem;\n}\n\n.ship-questionnaire {\n    font-family: var(--pri-ft);\n    font-size: 2rem;\n    color: var(--pri-clr);\n}\n\n.button-con {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\nbutton {\n    cursor: pointer;\n    line-height: 4rem;\n    width: 10rem;\n    font-family: var(--pri-ft);\n    font-size: 1.5rem;\n    color: var(--pri-clr);\n    border: 2px solid var(--pri-clr);\n    border-radius: 10px;\n    background-color: black;\n}\n\nbutton:active {\n    color: white;\n    border-color: white;\n}\n'],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(A[l]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);r&&A[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},A=[],a=0;a<n.length;a++){var l=n[a],c=r.base?l[0]+r.base:l[0],s=i[c]||0,d="".concat(c," ").concat(s);i[c]=s+1;var m=t(d),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var p=o(u,r);r.byIndex=a,e.splice(a,0,{identifier:d,updater:p,references:1})}A.push(d)}return A}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var l=r(n,o),c=0;c<i.length;c++){var s=t(i[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=l}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),A=t.n(i),a=t(565),l=t.n(a),c=t(216),s=t.n(c),d=t(589),m=t.n(d),u=t(426),p={};p.styleTagTransform=m(),p.setAttributes=l(),p.insert=A().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=s(),e()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;const f=["A","B","C","D","E","F","G","H","I","J"];function B(n){for(let e=0;e<10;e++){const t=document.createElement("div");t.className=`col-${f[e]}`,n.appendChild(t);for(let n=1;n<=10;n++){const r=document.createElement("div");r.className=`sq-${f[e]}${n}`,r.textContent=`${f[e]}${n}`,t.appendChild(r)}}}function C(n){const e=document.createElement("div");e.className="ship-img";for(let t=0;t<n;t++){const n=document.createElement("div");n.className="ship-sq",e.appendChild(n)}return e}function g(n,e,t,r){let o=n,i=function(n){const e=n.textContent;let t=0;return t=2===e.length?e.slice(e.length-1):e.slice(e.length-2),--t}(n),A=o.parentNode;if(function(n,e,t){let r;r="horizontal"===t?n.parentNode:n;for(let t=0;t<e;t++){if(null===r||"rgb(0, 35, 0)"===n.style.backgroundColor)return!1;r=r.nextElementSibling}return!0}(n,e,t))for(let n=0;n<e;n++)"horizontal"===t?(o=A.childNodes[i],"in"===r&&"rgb(0, 35, 0)"!==o.style.backgroundColor?o.style.backgroundColor="grey":"out"===r&&"rgb(0, 35, 0)"!==o.style.backgroundColor?o.style.backgroundColor="black":o.style.backgroundColor="rgb(0, 35, 0)",A=A.nextElementSibling):("in"===r&&"rgb(0, 35, 0)"!==o.style.backgroundColor?o.style.backgroundColor="grey":"out"===r&&"rgb(0, 35, 0)"!==o.style.backgroundColor?o.style.backgroundColor="black":o.style.backgroundColor="rgb(0, 35, 0)",o=o.nextElementSibling)}const I=document.querySelector(".initialize"),y=document.querySelector(".start"),b=document.querySelector(".title"),v=document.querySelector(".player-title"),h=document.querySelector(".computer-title"),x=document.querySelector("dialog"),E=document.querySelector(".modal-gameboard"),k=document.getElementById("player-gameboard"),q=document.getElementById("computer-gameboard"),S=document.querySelector(".ship-questionnaire"),w=document.querySelector(".ship-con"),z=["Carrier","Battleship","Cruiser","Submarine","Destroyer"],j=[5,4,3,3,2];let T=0;y.addEventListener("click",(()=>{let n="vertical";I.style.display="none",b.setAttribute("style","display: flex; justify-content: center; align-items: center;"),v.style.display="block",h.style.display="block",x.setAttribute("style","display: flex; justify-content: center; align-items: center;"),x.showModal(),B(E),B(k),B(q),document.querySelectorAll("[class*=sq]").forEach((e=>{e.addEventListener("mouseenter",(e=>{g(e.target,j[T],n,"in")})),e.addEventListener("click",(e=>{g(e.target,j[T],n,"selected")})),e.addEventListener("mouseout",(e=>{g(e.target,j[T],n,"out")}))})),S.textContent=`Place ${z[T]}`,w.appendChild(C(j[T]))})),document.querySelector(".next").addEventListener("click",(()=>{w.removeChild(w.firstChild),T++,S.textContent=`Place ${z[T]}`,w.appendChild(C(j[T]))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVcsV0FBVyxJQUU3RFAsRUFBR2lDLGlCQUFpQixZQUFhcEYsSUFDN0J3RCxFQUFNeEQsRUFBRVIsT0FBUTBGLEVBQVdDLEdBQVF6QixFQUFXLE1BQU0sR0FDdEQsSUFFTnFCLEVBQWMzQixZQUFjLFNBQVM2QixFQUFVRSxLQUMvQ0gsRUFBYzdFLFlBQVlrRCxFQUFZNkIsRUFBV0MsSUFBUSxJQUc3Q3pGLFNBQVNDLGNBQWMsU0FDL0J5RixpQkFBaUIsU0FBUyxLQUM5QkosRUFBY2pFLFlBQVlpRSxFQUFjN0QsWUFDeENnRSxJQUNBSixFQUFjM0IsWUFBYyxTQUFTNkIsRUFBVUUsS0FDL0NILEVBQWM3RSxZQUFZa0QsRUFBWTZCLEVBQVdDLElBQVEsRyIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZS1zaGlwcy8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vYmF0dGxlLXNoaXBzLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iYXR0bGUtc2hpcHMvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGUtc2hpcHMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlLXNoaXBzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9iYXR0bGUtc2hpcHMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlLXNoaXBzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL2JhdHRsZS1zaGlwcy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2JhdHRsZS1zaGlwcy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL2JhdHRsZS1zaGlwcy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9iYXR0bGUtc2hpcHMvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYmF0dGxlLXNoaXBzL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9iYXR0bGUtc2hpcHMvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9iYXR0bGUtc2hpcHMvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2JhdHRsZS1zaGlwcy8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly9iYXR0bGUtc2hpcHMvLi9zcmMvZ2FtZWJvYXJkLmpzIiwid2VicGFjazovL2JhdHRsZS1zaGlwcy8uL3NyYy9nYW1lU3F1YXJlcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGUtc2hpcHMvLi9zcmMvaW5pdGlhbGl6ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgKiB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCxcbmJvZHkge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cblxuOnJvb3Qge1xuICAgIC0tcHJpLWZ0OiBcIlByZXNzIFN0YXJ0IDJQXCI7XG4gICAgLS1wcmktY2xyOiBncmVlbjtcbiAgICAtLXNxdWFyZS1zaXplOiA1cmVtO1xufVxuXG4vKiAtLS0tLS0tLS0tIElOSVRJQUxJWkUgLS0tLS0tLS0tLSAqL1xuLmluaXRpYWxpemUge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5pbml0aWFsaXplLXRpdGxlIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZm9udC1mYW1pbHk6IHZhcigtLXByaS1mdCk7XG4gICAgZm9udC1zaXplOiA1cmVtO1xuICAgIGNvbG9yOiB2YXIoLS1wcmktY2xyKTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYW5pbWF0aW9uLW5hbWU6IHRpdGxlLXNob3c7XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAycztcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbn1cblxuLnN0YXJ0IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiA2NSU7XG4gICAgbGVmdDogNDUlO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1wcmktZnQpO1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICAgIHdpZHRoOiAxNXJlbTtcbiAgICBsaW5lLWhlaWdodDogNXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYW5pbWF0aW9uLW5hbWU6IHRpdGxlLXNob3c7XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAycztcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbn1cblxuQGtleWZyYW1lcyB0aXRsZS1zaG93IHtcbiAgICBmcm9tIHtjb2xvcjogYmxhY2s7IG9wYWNpdHk6IDA7fVxuICAgIHRvIHtjb2xvcjogdmFyKC0tcHJpLWNscik7IG9wYWNpdHk6IDEwMCV9XG59XG5cbi5zbGlkZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0b3A6IDUwJTtcbiAgICBib3JkZXItdG9wOiA1cHggc29saWQgZ3JlZW47XG4gICAgYm9yZGVyLWJvdHRvbTogNXB4IHNvbGlkIGdyZWVuO1xuICAgIGFuaW1hdGlvbi1uYW1lOiBzbGlkZTtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDJzO1xuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xufVxuXG5Aa2V5ZnJhbWVzIHNsaWRlIHtcbiAgICAwJSB7aGVpZ2h0OiAwJTsgdG9wOiA1MCU7fVxuICAgIDU1JSB7aGVpZ2h0OiAxMDAlOyB0b3A6IDAlO31cbiAgICAxMDAlIHtvcGFjaXR5OiAwJTt9XG59XG5cbi8qIC0tLS0tLS0tLS0gQUZURVIgSU5JVElBTElaQVRJT04gLS0tLS0tLS0tLSAqL1xuLnRpdGxlIHtcbiAgICBmb250LWZhbWlseTogdmFyKC0tcHJpLWZ0KTtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgY29sb3I6IHZhcigtLXByaS1jbHIpO1xuICAgIG1hcmdpbi10b3A6IDNyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZ2FtZWJvYXJkLWNvbiB7XG4gICAgbWFyZ2luLXRvcDogNXJlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiAxMHJlbTtcbn1cblxuLnBsYXllci1jb24sXG4uY29tcHV0ZXItY29uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDNyZW07XG59XG5cbi5wbGF5ZXItdGl0bGUsXG4uY29tcHV0ZXItdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1wcmktZnQpO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBjb2xvcjogdmFyKC0tcHJpLWNscik7XG59XG5cbltjbGFzcyo9XCJzcVwiXSB7XG4gICAgd2lkdGg6IHZhcigtLXNxdWFyZS1zaXplKTtcbiAgICBoZWlnaHQ6IHZhcigtLXNxdWFyZS1zaXplKTtcbiAgICBmb250LWZhbWlseTogdmFyKC0tcHJpLWZ0KTtcbiAgICBjb2xvcjogdmFyKC0tcHJpLWNscik7XG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tcHJpLWNscik7XG59XG5cbiNwbGF5ZXItZ2FtZWJvYXJkLFxuI2NvbXB1dGVyLWdhbWVib2FyZCxcbi5tb2RhbC1nYW1lYm9hcmQge1xuICAgIC8qIGJvcmRlcjogM3B4IHNvbGlkIGdyZWVuOyAqL1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLyogLS0tLS0tLS0tLSBNT0RBTCAtLS0tLS0tLS0tICovXG5kaWFsb2cge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBsZWZ0OiAyNSU7XG4gICAgdG9wOiAxNi41JTtcbiAgICBwYWRkaW5nOiAycmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDVyZW07XG59XG5cbmRpYWxvZzo6YmFja2Ryb3Age1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yNSk7XG59XG5cbi5tb2RhbC1yaWdodCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiA1cmVtO1xufVxuXG4uc2hpcC1xdWVzdGlvbm5haXJlIHtcbiAgICBmb250LWZhbWlseTogdmFyKC0tcHJpLWZ0KTtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgY29sb3I6IHZhcigtLXByaS1jbHIpO1xufVxuXG4uYnV0dG9uLWNvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMnJlbTtcbn1cblxuYnV0dG9uIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDRyZW07XG4gICAgd2lkdGg6IDEwcmVtO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1wcmktZnQpO1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIGNvbG9yOiB2YXIoLS1wcmktY2xyKTtcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1wcmktY2xyKTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuXG5idXR0b246YWN0aXZlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1Ysc0JBQXNCO0FBQzFCOztBQUVBOztJQUVJLFlBQVk7SUFDWix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtBQUN2Qjs7QUFFQSxxQ0FBcUM7QUFDckM7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDBCQUEwQjtJQUMxQixlQUFlO0lBQ2YscUJBQXFCO0lBQ3JCLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLDBCQUEwQjtJQUMxQixzQkFBc0I7SUFDdEIsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksZUFBZTtJQUNmLFFBQVE7SUFDUixTQUFTO0lBQ1QsMEJBQTBCO0lBQzFCLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQiwwQkFBMEI7SUFDMUIsc0JBQXNCO0lBQ3RCLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLE1BQU0sWUFBWSxFQUFFLFVBQVUsQ0FBQztJQUMvQixJQUFJLHFCQUFxQixFQUFFLGFBQWE7QUFDNUM7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFFBQVE7SUFDUiwyQkFBMkI7SUFDM0IsOEJBQThCO0lBQzlCLHFCQUFxQjtJQUNyQixzQkFBc0I7SUFDdEIsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksSUFBSSxVQUFVLEVBQUUsUUFBUSxDQUFDO0lBQ3pCLEtBQUssWUFBWSxFQUFFLE9BQU8sQ0FBQztJQUMzQixNQUFNLFdBQVcsQ0FBQztBQUN0Qjs7QUFFQSwrQ0FBK0M7QUFDL0M7SUFDSSwwQkFBMEI7SUFDMUIsZUFBZTtJQUNmLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsVUFBVTtBQUNkOztBQUVBOztJQUVJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLFNBQVM7QUFDYjs7QUFFQTs7SUFFSSwwQkFBMEI7SUFDMUIsZUFBZTtJQUNmLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QiwwQkFBMEI7SUFDMUIsMEJBQTBCO0lBQzFCLHFCQUFxQjtJQUNyQixnQ0FBZ0M7QUFDcEM7O0FBRUE7OztJQUdJLDZCQUE2QjtJQUM3QixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2Qjs7QUFFQSxnQ0FBZ0M7QUFDaEM7SUFDSSxlQUFlO0lBQ2YsU0FBUztJQUNULFVBQVU7SUFDVixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFNBQVM7QUFDYjs7QUFFQTtJQUNJLDJDQUEyQztBQUMvQzs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLFNBQVM7QUFDYjs7QUFFQTtJQUNJLDBCQUEwQjtJQUMxQixlQUFlO0lBQ2YscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsU0FBUztBQUNiOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osMEJBQTBCO0lBQzFCLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsZ0NBQWdDO0lBQ2hDLG1CQUFtQjtJQUNuQix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osbUJBQW1CO0FBQ3ZCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIioge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbmh0bWwsXFxuYm9keSB7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxufVxcblxcbjpyb290IHtcXG4gICAgLS1wcmktZnQ6IFxcXCJQcmVzcyBTdGFydCAyUFxcXCI7XFxuICAgIC0tcHJpLWNscjogZ3JlZW47XFxuICAgIC0tc3F1YXJlLXNpemU6IDVyZW07XFxufVxcblxcbi8qIC0tLS0tLS0tLS0gSU5JVElBTElaRSAtLS0tLS0tLS0tICovXFxuLmluaXRpYWxpemUge1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLmluaXRpYWxpemUtdGl0bGUge1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1wcmktZnQpO1xcbiAgICBmb250LXNpemU6IDVyZW07XFxuICAgIGNvbG9yOiB2YXIoLS1wcmktY2xyKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGFuaW1hdGlvbi1uYW1lOiB0aXRsZS1zaG93O1xcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDJzO1xcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcXG59XFxuXFxuLnN0YXJ0IHtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICB0b3A6IDY1JTtcXG4gICAgbGVmdDogNDUlO1xcbiAgICBmb250LWZhbWlseTogdmFyKC0tcHJpLWZ0KTtcXG4gICAgZm9udC1zaXplOiAyLjVyZW07XFxuICAgIHdpZHRoOiAxNXJlbTtcXG4gICAgbGluZS1oZWlnaHQ6IDVyZW07XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgYW5pbWF0aW9uLW5hbWU6IHRpdGxlLXNob3c7XFxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMnM7XFxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIHRpdGxlLXNob3cge1xcbiAgICBmcm9tIHtjb2xvcjogYmxhY2s7IG9wYWNpdHk6IDA7fVxcbiAgICB0byB7Y29sb3I6IHZhcigtLXByaS1jbHIpOyBvcGFjaXR5OiAxMDAlfVxcbn1cXG5cXG4uc2xpZGVyIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgdG9wOiA1MCU7XFxuICAgIGJvcmRlci10b3A6IDVweCBzb2xpZCBncmVlbjtcXG4gICAgYm9yZGVyLWJvdHRvbTogNXB4IHNvbGlkIGdyZWVuO1xcbiAgICBhbmltYXRpb24tbmFtZTogc2xpZGU7XFxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMnM7XFxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIHNsaWRlIHtcXG4gICAgMCUge2hlaWdodDogMCU7IHRvcDogNTAlO31cXG4gICAgNTUlIHtoZWlnaHQ6IDEwMCU7IHRvcDogMCU7fVxcbiAgICAxMDAlIHtvcGFjaXR5OiAwJTt9XFxufVxcblxcbi8qIC0tLS0tLS0tLS0gQUZURVIgSU5JVElBTElaQVRJT04gLS0tLS0tLS0tLSAqL1xcbi50aXRsZSB7XFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1wcmktZnQpO1xcbiAgICBmb250LXNpemU6IDJyZW07XFxuICAgIGNvbG9yOiB2YXIoLS1wcmktY2xyKTtcXG4gICAgbWFyZ2luLXRvcDogM3JlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5nYW1lYm9hcmQtY29uIHtcXG4gICAgbWFyZ2luLXRvcDogNXJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMTByZW07XFxufVxcblxcbi5wbGF5ZXItY29uLFxcbi5jb21wdXRlci1jb24ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDNyZW07XFxufVxcblxcbi5wbGF5ZXItdGl0bGUsXFxuLmNvbXB1dGVyLXRpdGxlIHtcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLXByaS1mdCk7XFxuICAgIGZvbnQtc2l6ZTogMnJlbTtcXG4gICAgY29sb3I6IHZhcigtLXByaS1jbHIpO1xcbn1cXG5cXG5bY2xhc3MqPVxcXCJzcVxcXCJdIHtcXG4gICAgd2lkdGg6IHZhcigtLXNxdWFyZS1zaXplKTtcXG4gICAgaGVpZ2h0OiB2YXIoLS1zcXVhcmUtc2l6ZSk7XFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1wcmktZnQpO1xcbiAgICBjb2xvcjogdmFyKC0tcHJpLWNscik7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXByaS1jbHIpO1xcbn1cXG5cXG4jcGxheWVyLWdhbWVib2FyZCxcXG4jY29tcHV0ZXItZ2FtZWJvYXJkLFxcbi5tb2RhbC1nYW1lYm9hcmQge1xcbiAgICAvKiBib3JkZXI6IDNweCBzb2xpZCBncmVlbjsgKi9cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi8qIC0tLS0tLS0tLS0gTU9EQUwgLS0tLS0tLS0tLSAqL1xcbmRpYWxvZyB7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgbGVmdDogMjUlO1xcbiAgICB0b3A6IDE2LjUlO1xcbiAgICBwYWRkaW5nOiAycmVtO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogNXJlbTtcXG59XFxuXFxuZGlhbG9nOjpiYWNrZHJvcCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yNSk7XFxufVxcblxcbi5tb2RhbC1yaWdodCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogNXJlbTtcXG59XFxuXFxuLnNoaXAtcXVlc3Rpb25uYWlyZSB7XFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1wcmktZnQpO1xcbiAgICBmb250LXNpemU6IDJyZW07XFxuICAgIGNvbG9yOiB2YXIoLS1wcmktY2xyKTtcXG59XFxuXFxuLmJ1dHRvbi1jb24ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAycmVtO1xcbn1cXG5cXG5idXR0b24ge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGxpbmUtaGVpZ2h0OiA0cmVtO1xcbiAgICB3aWR0aDogMTByZW07XFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1wcmktZnQpO1xcbiAgICBmb250LXNpemU6IDEuNXJlbTtcXG4gICAgY29sb3I6IHZhcigtLXByaS1jbHIpO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1wcmktY2xyKTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxufVxcblxcbmJ1dHRvbjphY3RpdmUge1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJjb25zdCBsZXR0ZXJzID0gW1wiQVwiLCBcIkJcIiwgXCJDXCIsIFwiRFwiLCBcIkVcIiwgXCJGXCIsIFwiR1wiLCBcIkhcIiwgXCJJXCIsIFwiSlwiXTtcblxuZnVuY3Rpb24gY3JlYXRlR2FtZUJvYXJkKGVsZW0pIHtcbiAgICBmb3IobGV0IGNvbCA9IDA7IGNvbCA8IDEwOyBjb2wrKykge1xuICAgICAgICBjb25zdCBjb2x1bW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBjb2x1bW4uY2xhc3NOYW1lID0gYGNvbC0ke2xldHRlcnNbY29sXX1gO1xuICAgICAgICBlbGVtLmFwcGVuZENoaWxkKGNvbHVtbilcbiAgICAgICAgZm9yKGxldCByb3cgPSAxOyByb3cgPD0gMTA7IHJvdysrKSB7XG4gICAgICAgICAgICBjb25zdCBzcSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICBzcS5jbGFzc05hbWUgPSBgc3EtJHtsZXR0ZXJzW2NvbF19JHtyb3d9YDtcbiAgICAgICAgICAgIHNxLnRleHRDb250ZW50ID0gYCR7bGV0dGVyc1tjb2xdfSR7cm93fWA7XG4gICAgICAgICAgICBjb2x1bW4uYXBwZW5kQ2hpbGQoc3EpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTaGlwcyhsZW5ndGgpIHtcbiAgICBjb25zdCBzaGlwSW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBzaGlwSW1nLmNsYXNzTmFtZSA9IFwic2hpcC1pbWdcIjtcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgc2hpcFNxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgc2hpcFNxLmNsYXNzTmFtZSA9IFwic2hpcC1zcVwiO1xuICAgICAgICBzaGlwSW1nLmFwcGVuZENoaWxkKHNoaXBTcSk7XG4gICAgfVxuICAgIHJldHVybiBzaGlwSW1nO1xufVxuXG5leHBvcnQge2NyZWF0ZUdhbWVCb2FyZCwgY3JlYXRlU2hpcHN9OyIsImZ1bmN0aW9uIGhvdmVyKHNxdWFyZSwgbGVuZ3RoLCBkaXJlY3Rpb24sIG1vdXNlKSB7XG4gICAgbGV0IHN0YXJ0Tm9kZSA9IHNxdWFyZTtcbiAgICBsZXQgaW5kZXggPSBub2RlSW5kZXgoc3F1YXJlKTtcbiAgICBsZXQgcGFyZW50Tm9kZSA9IHN0YXJ0Tm9kZS5wYXJlbnROb2RlO1xuICAgIGlmKGdyaWRFeGlzdChzcXVhcmUsIGxlbmd0aCwgZGlyZWN0aW9uKSkge1xuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmKGRpcmVjdGlvbiA9PT0gXCJob3Jpem9udGFsXCIpIHtcbiAgICAgICAgICAgICAgICBzdGFydE5vZGUgPSBwYXJlbnROb2RlLmNoaWxkTm9kZXNbaW5kZXhdO1xuICAgICAgICAgICAgICAgIGlmKG1vdXNlID09PSBcImluXCIgJiYgc3RhcnROb2RlLnN0eWxlLmJhY2tncm91bmRDb2xvciAhPT0gXCJyZ2IoMCwgMzUsIDApXCIpIHN0YXJ0Tm9kZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcImdyZXlcIjtcbiAgICAgICAgICAgICAgICBlbHNlIGlmKG1vdXNlID09PSBcIm91dFwiICYmIHN0YXJ0Tm9kZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgIT09IFwicmdiKDAsIDM1LCAwKVwiKSBzdGFydE5vZGUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJibGFja1wiO1xuICAgICAgICAgICAgICAgIGVsc2Ugc3RhcnROb2RlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwicmdiKDAsIDM1LCAwKVwiO1xuICAgICAgICAgICAgICAgIHBhcmVudE5vZGUgPSBwYXJlbnROb2RlLm5leHRFbGVtZW50U2libGluZztcbiAgICAgICAgICAgIH1lbHNlIHtcbiAgICAgICAgICAgICAgICBpZihtb3VzZSA9PT0gXCJpblwiICYmIHN0YXJ0Tm9kZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgIT09IFwicmdiKDAsIDM1LCAwKVwiKSBzdGFydE5vZGUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJncmV5XCI7XG4gICAgICAgICAgICAgICAgZWxzZSBpZihtb3VzZSA9PT0gXCJvdXRcIiAmJiBzdGFydE5vZGUuc3R5bGUuYmFja2dyb3VuZENvbG9yICE9PSBcInJnYigwLCAzNSwgMClcIikgc3RhcnROb2RlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiYmxhY2tcIjtcbiAgICAgICAgICAgICAgICBlbHNlIHN0YXJ0Tm9kZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcInJnYigwLCAzNSwgMClcIjtcbiAgICAgICAgICAgICAgICBzdGFydE5vZGUgPSBzdGFydE5vZGUubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vL0ZpZ3VyZSBvdXQgaW5kZXggb2Ygbm9kZSB0byBpbnB1dCBpbnRvIHBhcmVudE5vZGUgd2hlbiBnb2luZyBob3Jpem9udGFsIC0gcmV0dXJuIGluZGV4IG1pbnVzIDFcbmZ1bmN0aW9uIG5vZGVJbmRleChzcXVhcmUpIHtcbiAgICBjb25zdCBzdHIgPSBzcXVhcmUudGV4dENvbnRlbnQ7XG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICBzdHIubGVuZ3RoID09PSAyID8gaW5kZXggPSBzdHIuc2xpY2Uoc3RyLmxlbmd0aCAtIDEpIDogaW5kZXggPSBzdHIuc2xpY2Uoc3RyLmxlbmd0aCAtIDIpO1xuICAgIHJldHVybiAtLWluZGV4O1xufVxuXG4vL0RldGVybWluZSBpZiBhIGdyaWQgc2hvdWxkIGJlIGhpZ2hsaWdodGVkIGlmIHRoZSBncmlkIGV4aXN0XG5mdW5jdGlvbiBncmlkRXhpc3Qoc3F1YXJlLCBsZW5ndGgsIGRpcmVjdGlvbikge1xuICAgIGxldCBub2RlO1xuICAgIGRpcmVjdGlvbiA9PT0gXCJob3Jpem9udGFsXCIgPyBub2RlID0gc3F1YXJlLnBhcmVudE5vZGUgOiBub2RlID0gc3F1YXJlO1xuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICBpZihub2RlID09PSBudWxsIHx8IHNxdWFyZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPT09IFwicmdiKDAsIDM1LCAwKVwiKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIGVsc2Ugbm9kZSA9IG5vZGUubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IHtob3Zlcn07IiwiaW1wb3J0IHsgY3JlYXRlR2FtZUJvYXJkLCBjcmVhdGVTaGlwcyB9IGZyb20gXCIuL2dhbWVib2FyZFwiO1xuaW1wb3J0IHsgaG92ZXJ9IGZyb20gXCIuL2dhbWVTcXVhcmVzXCI7XG5cbmNvbnN0IGluaXRpYWxpemUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmluaXRpYWxpemVcIik7XG5jb25zdCBzdGFydEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3RhcnRcIik7XG5jb25zdCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGl0bGVcIik7XG5jb25zdCBwbGF5ZXJUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxheWVyLXRpdGxlXCIpO1xuY29uc3QgY29tcHV0ZXJUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29tcHV0ZXItdGl0bGVcIik7XG5jb25zdCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJkaWFsb2dcIik7XG5jb25zdCBtb2RhbEdhbWVib2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWwtZ2FtZWJvYXJkXCIpO1xuY29uc3QgcGxheWVyR2FtZWJvYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5ZXItZ2FtZWJvYXJkXCIpO1xuY29uc3QgY29tcHV0ZXJHYW1lYm9hcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbXB1dGVyLWdhbWVib2FyZFwiKTtcbmNvbnN0IHF1ZXN0aW9ubmFpcmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNoaXAtcXVlc3Rpb25uYWlyZVwiKTtcbmNvbnN0IHNoaXBDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNoaXAtY29uXCIpO1xuXG5jb25zdCBzaGlwTmFtZXMgPSBbXCJDYXJyaWVyXCIsIFwiQmF0dGxlc2hpcFwiLCBcIkNydWlzZXJcIiwgXCJTdWJtYXJpbmVcIiwgXCJEZXN0cm95ZXJcIl07XG5jb25zdCBzaGlwTGVuZ3RoID0gWzUsIDQsIDMsIDMsIDJdO1xubGV0IHN0YXJ0ID0gMDtcblxuZnVuY3Rpb24gaW5pdGlhbGl6ZUdhbWUoKSB7XG4gICAgc3RhcnRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgbGV0IGRpcmVjdGlvbiA9IFwidmVydGljYWxcIjtcbiAgICAgICAgaW5pdGlhbGl6ZS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIHRpdGxlLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7XCIpO1xuICAgICAgICBwbGF5ZXJUaXRsZS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICBjb21wdXRlclRpdGxlLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIG1vZGFsLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7XCIpO1xuICAgICAgICBtb2RhbC5zaG93TW9kYWwoKTtcbiAgICAgICAgY3JlYXRlR2FtZUJvYXJkKG1vZGFsR2FtZWJvYXJkKTtcbiAgICAgICAgY3JlYXRlR2FtZUJvYXJkKHBsYXllckdhbWVib2FyZCk7XG4gICAgICAgIGNyZWF0ZUdhbWVCb2FyZChjb21wdXRlckdhbWVib2FyZCk7XG4gICAgICAgIGNvbnN0IHNxdWFyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbY2xhc3MqPXNxXVwiKTtcbiAgICAgICAgc3F1YXJlLmZvckVhY2goc3EgPT4ge1xuICAgICAgICAgICAgc3EuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgKGUpID0+IHtcbiAgICAgICAgICAgICAgICBob3ZlcihlLnRhcmdldCwgc2hpcExlbmd0aFtzdGFydF0sIGRpcmVjdGlvbiwgXCJpblwiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc3EuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICAgICAgICAgICAgaG92ZXIoZS50YXJnZXQsIHNoaXBMZW5ndGhbc3RhcnRdLCBkaXJlY3Rpb24sIFwic2VsZWN0ZWRcIik7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgc3EuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3V0XCIsIChlKSA9PiB7XG4gICAgICAgICAgICAgICAgaG92ZXIoZS50YXJnZXQsIHNoaXBMZW5ndGhbc3RhcnRdLCBkaXJlY3Rpb24sIFwib3V0XCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBxdWVzdGlvbm5haXJlLnRleHRDb250ZW50ID0gYFBsYWNlICR7c2hpcE5hbWVzW3N0YXJ0XX1gO1xuICAgICAgICBzaGlwQ29udGFpbmVyLmFwcGVuZENoaWxkKGNyZWF0ZVNoaXBzKHNoaXBMZW5ndGhbc3RhcnRdKSk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBuZXh0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uZXh0XCIpO1xuICAgIG5leHRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgc2hpcENvbnRhaW5lci5yZW1vdmVDaGlsZChzaGlwQ29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuICAgICAgICBzdGFydCsrO1xuICAgICAgICBxdWVzdGlvbm5haXJlLnRleHRDb250ZW50ID0gYFBsYWNlICR7c2hpcE5hbWVzW3N0YXJ0XX1gO1xuICAgICAgICBzaGlwQ29udGFpbmVyLmFwcGVuZENoaWxkKGNyZWF0ZVNoaXBzKHNoaXBMZW5ndGhbc3RhcnRdKSk7XG4gICAgfSk7XG59XG5cbmV4cG9ydCB7IGluaXRpYWxpemVHYW1lIH07Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImxvY2FscyIsImxldHRlcnMiLCJjcmVhdGVHYW1lQm9hcmQiLCJlbGVtIiwiY29sIiwiY29sdW1uIiwiY2xhc3NOYW1lIiwicm93Iiwic3EiLCJ0ZXh0Q29udGVudCIsImNyZWF0ZVNoaXBzIiwic2hpcEltZyIsInNoaXBTcSIsImhvdmVyIiwic3F1YXJlIiwiZGlyZWN0aW9uIiwibW91c2UiLCJzdGFydE5vZGUiLCJzdHIiLCJzbGljZSIsIm5vZGVJbmRleCIsIm5vZGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJncmlkRXhpc3QiLCJjaGlsZE5vZGVzIiwiaW5pdGlhbGl6ZSIsInN0YXJ0QnRuIiwidGl0bGUiLCJwbGF5ZXJUaXRsZSIsImNvbXB1dGVyVGl0bGUiLCJtb2RhbCIsIm1vZGFsR2FtZWJvYXJkIiwicGxheWVyR2FtZWJvYXJkIiwiZ2V0RWxlbWVudEJ5SWQiLCJjb21wdXRlckdhbWVib2FyZCIsInF1ZXN0aW9ubmFpcmUiLCJzaGlwQ29udGFpbmVyIiwic2hpcE5hbWVzIiwic2hpcExlbmd0aCIsInN0YXJ0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImRpc3BsYXkiLCJzaG93TW9kYWwiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCJdLCJzb3VyY2VSb290IjoiIn0=